{"version":3,"sources":["../../../src/views/first-person-view.js"],"names":["getDirectionFromBearingAndPitch","bearing","pitch","spherical","SphericalCoordinates","direction","toVector3","normalize","FirstPersonView","View","controller","_getControllerProps","type","FirstPersonController","_getViewport","props","modelMatrix","up","viewState","dir","center","transformDirection","viewMatrix","Matrix4","lookAt","eye","Viewport","Object","assign","zoom","displayName"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,SAASA,+BAAT,OAA2D;AAAA,MAAlB;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAkB;AACzD,QAAMC,SAAS,GAAG,IAAIC,2BAAJ,CAAyB;AAACH,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAAzB,CAAlB;AACA,QAAMG,SAAS,GAAGF,SAAS,CAACG,SAAV,GAAsBC,SAAtB,EAAlB;AACA,SAAOF,SAAP;AACD;;AAEc,MAAMG,eAAN,SAA8BC,aAA9B,CAAmC;AAClC,MAAVC,UAAU,GAAG;AACf,WAAO,KAAKC,mBAAL,CAAyB;AAC9BC,MAAAA,IAAI,EAAEC;AADwB,KAAzB,CAAP;AAGD;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAElB,UAAM;AAEJC,MAAAA,WAAW,GAAG,IAFV;AAGJf,MAAAA,OAHI;AAIJgB,MAAAA,EAAE,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAJD,QAKFF,KAAK,CAACG,SALV;AAQA,UAAMC,GAAG,GAAGnB,+BAA+B,CAAC;AAC1CC,MAAAA,OAD0C;AAE1CC,MAAAA,KAAK,EAAE;AAFmC,KAAD,CAA3C;AAMA,UAAMkB,MAAM,GAAGJ,WAAW,GAAGA,WAAW,CAACK,kBAAZ,CAA+BF,GAA/B,CAAH,GAAyCA,GAAnE;AAGA,UAAMG,UAAU,GAAG,IAAIC,aAAJ,GAAcC,MAAd,CAAqB;AAACC,MAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN;AAAiBL,MAAAA,MAAjB;AAAyBH,MAAAA;AAAzB,KAArB,CAAnB;AAEA,WAAO,IAAIS,iBAAJ,CACLC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,KAAlB,EAAyB;AACvBc,MAAAA,IAAI,EAAE,IADiB;AAEvBP,MAAAA;AAFuB,KAAzB,CADK,CAAP;AAMD;;AAlC+C;;;AAqClDd,eAAe,CAACsB,WAAhB,GAA8B,iBAA9B","sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\nimport {Matrix4, _SphericalCoordinates as SphericalCoordinates} from 'math.gl';\nimport FirstPersonController from '../controllers/first-person-controller';\n\nfunction getDirectionFromBearingAndPitch({bearing, pitch}) {\n  const spherical = new SphericalCoordinates({bearing, pitch});\n  const direction = spherical.toVector3().normalize();\n  return direction;\n}\n\nexport default class FirstPersonView extends View {\n  get controller() {\n    return this._getControllerProps({\n      type: FirstPersonController\n    });\n  }\n\n  _getViewport(props) {\n    // TODO - push direction handling into Matrix4.lookAt\n    const {\n      // view matrix arguments\n      modelMatrix = null,\n      bearing,\n      up = [0, 0, 1] // Defines up direction, default positive z axis,\n    } = props.viewState;\n\n    // Always calculate direction from bearing and pitch\n    const dir = getDirectionFromBearingAndPitch({\n      bearing,\n      pitch: 89\n    });\n\n    // Direction is relative to model coordinates, of course\n    const center = modelMatrix ? modelMatrix.transformDirection(dir) : dir;\n\n    // Just the direction. All the positioning is done in viewport.js\n    const viewMatrix = new Matrix4().lookAt({eye: [0, 0, 0], center, up});\n\n    return new Viewport(\n      Object.assign({}, props, {\n        zoom: null, // triggers meter level zoom\n        viewMatrix\n      })\n    );\n  }\n}\n\nFirstPersonView.displayName = 'FirstPersonView';\n"],"file":"first-person-view.js"}