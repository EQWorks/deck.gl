{"version":3,"sources":["../../../src/grid-layer/grid-layer.js"],"names":["defaultProps","Object","assign","GPUGridLayer","CPUGridLayer","gpuAggregation","GridLayer","CompositeLayer","initializeState","state","useGPUAggregation","updateState","oldProps","props","changeFlags","newState","canUseGPUAggregation","setState","renderLayers","data","updateTriggers","id","LayerType","getSubLayerClass","getSubLayerProps","lowerPercentile","upperPercentile","getColorValue","getElevationValue","GPUGridAggregator","isSupported","context","gl","layerName"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,MAAMA,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,sBAAaH,YAA/B,EAA6CI,sBAAaJ,YAA1D,EAAwE;AAC3FK,EAAAA,cAAc,EAAE;AAD2E,CAAxE,CAArB;;AAIe,MAAMC,SAAN,SAAwBC,kCAAxB,CAAuC;AACpDC,EAAAA,eAAe,GAAG;AAChB,SAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE;AADR,KAAb;AAGD;;AAEDC,EAAAA,WAAW,OAAiC;AAAA,QAAhC;AAACC,MAAAA,QAAD;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAgC;AAC1C,UAAMC,QAAQ,GAAG,EAAjB;AACAA,IAAAA,QAAQ,CAACL,iBAAT,GAA6B,KAAKM,oBAAL,CAA0BH,KAA1B,CAA7B;AACA,SAAKI,QAAL,CAAcF,QAAd;AACD;;AAEDG,EAAAA,YAAY,GAAG;AACb,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAyB,KAAKP,KAApC;AACA,UAAMQ,EAAE,GAAG,KAAKZ,KAAL,CAAWC,iBAAX,GAA+B,KAA/B,GAAuC,KAAlD;AACA,UAAMY,SAAS,GAAG,KAAKb,KAAL,CAAWC,iBAAX,GACd,KAAKa,gBAAL,CAAsB,KAAtB,EAA6BpB,qBAA7B,CADc,GAEd,KAAKoB,gBAAL,CAAsB,KAAtB,EAA6BnB,qBAA7B,CAFJ;AAGA,WAAO,IAAIkB,SAAJ,CACL,KAAKT,KADA,EAEL,KAAKW,gBAAL,CAAsB;AACpBH,MAAAA,EADoB;AAEpBD,MAAAA;AAFoB,KAAtB,CAFK,EAML;AACED,MAAAA;AADF,KANK,CAAP;AAUD;;AAIDH,EAAAA,oBAAoB,CAACH,KAAD,EAAQ;AAC1B,UAAM;AACJR,MAAAA,cADI;AAEJoB,MAAAA,eAFI;AAGJC,MAAAA,eAHI;AAIJC,MAAAA,aAJI;AAKJC,MAAAA;AALI,QAMFf,KANJ;;AAOA,QAAI,CAACR,cAAL,EAAqB;AAEnB,aAAO,KAAP;AACD;;AACD,QAAI,CAACwB,2BAAkBC,WAAlB,CAA8B,KAAKC,OAAL,CAAaC,EAA3C,CAAL,EAAqD;AACnD,aAAO,KAAP;AACD;;AACD,QAAIP,eAAe,KAAK,CAApB,IAAyBC,eAAe,KAAK,GAAjD,EAAsD;AAEpD,aAAO,KAAP;AACD;;AACD,QAAIC,aAAa,KAAK,IAAlB,IAA0BC,iBAAiB,KAAK,IAApD,EAA0D;AAExD,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD;;AAzDmD;;;AA4DtDtB,SAAS,CAAC2B,SAAV,GAAsB,WAAtB;AACA3B,SAAS,CAACN,YAAV,GAAyBA,YAAzB","sourcesContent":["import { CompositeLayer } from 'kepler-outdated-deck.gl-core';\nimport GPUGridAggregator from '../utils/gpu-grid-aggregation/gpu-grid-aggregator';\nimport GPUGridLayer from '../gpu-grid-layer/gpu-grid-layer';\nimport CPUGridLayer from '../cpu-grid-layer/cpu-grid-layer';\n\nconst defaultProps = Object.assign({}, GPUGridLayer.defaultProps, CPUGridLayer.defaultProps, {\n  gpuAggregation: false\n});\n\nexport default class GridLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      useGPUAggregation: true\n    };\n  }\n\n  updateState({oldProps, props, changeFlags}) {\n    const newState = {};\n    newState.useGPUAggregation = this.canUseGPUAggregation(props);\n    this.setState(newState);\n  }\n\n  renderLayers() {\n    const {data, updateTriggers} = this.props;\n    const id = this.state.useGPUAggregation ? 'GPU' : 'CPU';\n    const LayerType = this.state.useGPUAggregation\n      ? this.getSubLayerClass('GPU', GPUGridLayer)\n      : this.getSubLayerClass('CPU', CPUGridLayer);\n    return new LayerType(\n      this.props,\n      this.getSubLayerProps({\n        id,\n        updateTriggers\n      }),\n      {\n        data\n      }\n    );\n  }\n\n  // Private methods\n\n  canUseGPUAggregation(props) {\n    const {\n      gpuAggregation,\n      lowerPercentile,\n      upperPercentile,\n      getColorValue,\n      getElevationValue\n    } = props;\n    if (!gpuAggregation) {\n      // cpu aggregation is requested\n      return false;\n    }\n    if (!GPUGridAggregator.isSupported(this.context.gl)) {\n      return false;\n    }\n    if (lowerPercentile !== 0 || upperPercentile !== 100) {\n      // percentile calculations requires sorting not supported on GPU\n      return false;\n    }\n    if (getColorValue !== null || getElevationValue !== null) {\n      // accessor for custom color or elevation calculation is specified\n      return false;\n    }\n    return true;\n  }\n}\n\nGridLayer.layerName = 'GridLayer';\nGridLayer.defaultProps = defaultProps;\n"],"file":"grid-layer.js"}