{"version":3,"sources":["../../src/deckgl.js"],"names":["memoize","experimental","propTypes","Deck","getPropTypes","PropTypes","defaultProps","DeckGL","React","Component","constructor","props","viewports","children","_needsRedraw","pickObject","bind","pickMultipleObjects","pickObjects","_extractJSXLayers","extractJSXLayers","_positionChildrenUnderViews","positionChildrenUnderViews","componentDidMount","DeckClass","deck","Object","assign","canvas","deckCanvas","_customRender","_updateFromProps","shouldComponentUpdate","nextProps","childrenChanged","_parseJSX","viewsChanged","viewManager","needsRedraw","componentDidUpdate","_redrawDeck","componentWillUnmount","finalize","x","y","radius","layerIds","depth","width","height","_drawLayers","redrawReason","getViewports","forceUpdate","layers","views","deckProps","setProps","render","ContextProvider","style","position","left","top","ref","c","key","id"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport { Deck, experimental } from 'kepler-outdated-deck.gl-core';\nconst {memoize} = experimental;\n\nimport extractJSXLayers from './utils/extract-jsx-layers';\nimport positionChildrenUnderViews from './utils/position-children-under-views';\n\nconst propTypes = Deck.getPropTypes(PropTypes);\n\nconst defaultProps = Deck.defaultProps;\n\nexport default class DeckGL extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.viewports = null;\n    this.children = null;\n\n    // The redraw flag of deck\n    this._needsRedraw = null;\n\n    // Bind public methods\n    this.pickObject = this.pickObject.bind(this);\n    this.pickMultipleObjects = this.pickObject.bind(this);\n    this.pickObjects = this.pickObject.bind(this);\n\n    // Memoized functions\n    this._extractJSXLayers = memoize(extractJSXLayers);\n    this._positionChildrenUnderViews = memoize(positionChildrenUnderViews);\n  }\n\n  componentDidMount() {\n    // Allows a subclass of Deck to be used\n    // TODO - update propTypes / defaultProps?\n    const DeckClass = this.props.Deck || Deck;\n\n    // DEVTOOLS can cause this to be called twice\n    this.deck =\n      this.deck ||\n      new DeckClass(\n        Object.assign({}, this.props, {\n          canvas: this.deckCanvas,\n          // The Deck's animation loop is independent from React's render cycle, causing potential\n          // synchronization issues. We provide this custom render function to make sure that React\n          // and Deck update on the same schedule.\n          _customRender: this._customRender.bind(this)\n        })\n      );\n    this._updateFromProps(this.props);\n  }\n\n  // This method checks if React needs to call `render`.\n  // Props changes may lead to 3 types of updates:\n  // 1. Only the WebGL context - updated in Deck's render cycle (next animation frame)\n  // 2. Only the DOM - updated in React's lifecycle (now)\n  // 3. Both the WebGL context and the DOM - defer React rerender to next animation frame just\n  //    before Deck redraw to ensure perfect synchronization & avoid excessive redraw\n  //    This is because multiple changes may happen to Deck between two frames e.g. transition\n  shouldComponentUpdate(nextProps) {\n    // Update Deck's props. If Deck needs redraw, this will trigger a call to `_customRender` in\n    // the next animation frame.\n    this._updateFromProps(nextProps);\n\n    // If the child components have changed, React needs to rerender (case 2 or 3)\n    const childrenChanged = this.children !== this._parseJSX(nextProps).children;\n    // If the views have changed, both React and WebGL context need update (case 3)\n    const viewsChanged = this.deck.viewManager && this.deck.viewManager.needsRedraw();\n\n    // Only call `render` right away in case 2\n    return childrenChanged && !viewsChanged;\n  }\n\n  componentDidUpdate() {\n    // render has just been called. The children are positioned based on the current view state.\n    // Redraw Deck canvas immediately, if necessary, using the current view state, so that it\n    // matches the child components.\n    this._redrawDeck();\n  }\n\n  componentWillUnmount() {\n    this.deck.finalize();\n  }\n\n  // Public API\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    return this.deck.pickObject({x, y, radius, layerIds});\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    return this.deck.pickMultipleObjects({x, y, radius, layerIds, depth});\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    return this.deck.pickObjects({x, y, width, height, layerIds});\n  }\n\n  // Callbacks\n  _redrawDeck() {\n    if (this._needsRedraw) {\n      // Only redraw it we have received a dirty flag\n      this.deck._drawLayers(this._needsRedraw);\n      this._needsRedraw = null;\n    }\n  }\n\n  _customRender(redrawReason) {\n    // Save the dirty flag for later\n    this._needsRedraw = redrawReason;\n\n    // Viewport/view state is passed to child components as props.\n    // If they have changed, we need to trigger a React rerender to update children props.\n    const viewports = this.deck.viewManager.getViewports();\n    if (viewports !== this.viewports) {\n      // Viewports have changed, update children props first.\n      // This will delay the Deck canvas redraw till after React update (in componentDidUpdate)\n      // so that the canvas does not get rendered before the child components update.\n      this.forceUpdate();\n    } else {\n      this._redrawDeck();\n    }\n  }\n\n  // Private Helpers\n\n  _parseJSX(props) {\n    return this._extractJSXLayers({\n      layers: props.layers,\n      views: props.views,\n      children: props.children\n    });\n  }\n\n  // 1. Extract any JSX layers from the react children\n  // 2. Handle any backwards compatiblity props for React layer\n  // Needs to be called both from initial mount, and when new props are received\n  _updateFromProps(props) {\n    // extract any deck.gl layers masquerading as react elements from props.children\n    const {layers, views} = this._parseJSX(props);\n    const deckProps = Object.assign({}, props, {\n      layers,\n      views\n    });\n\n    this.deck.setProps(deckProps);\n  }\n\n  render() {\n    // Save the viewports and children used for this render\n    const {viewManager} = this.deck || {};\n    this.viewports = viewManager && viewManager.getViewports();\n    this.children = this._parseJSX(this.props).children;\n\n    // Render the background elements (typically react-map-gl instances)\n    // using the view descriptors\n    const children = this._positionChildrenUnderViews({\n      children: this.children,\n      viewports: this.viewports,\n      deck: this.deck,\n      ContextProvider: this.props.ContextProvider\n    });\n\n    // TODO - this styling is enforced for correct positioning with children\n    // It can override the styling set by `Deck`, this should be consolidated.\n    // Note that width and height are handled by deck.gl\n    const style = Object.assign({}, {position: 'absolute', left: 0, top: 0}, this.props.style);\n\n    const canvas = createElement('canvas', {\n      ref: c => (this.deckCanvas = c),\n      key: 'deck-canvas',\n      id: this.props.id,\n      style\n    });\n\n    // Render deck.gl as the last child\n    return createElement('div', {id: 'deckgl-wrapper'}, [children, canvas]);\n  }\n}\n\nDeckGL.propTypes = propTypes;\nDeckGL.defaultProps = defaultProps;\n"],"file":"deckgl.js"}