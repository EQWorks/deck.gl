{"version":3,"sources":["../../../src/tile-layer/tile-layer.js"],"names":["defaultProps","renderSubLayers","type","value","props","GeoJsonLayer","getTileData","x","y","z","Promise","resolve","onViewportLoaded","onTileError","err","console","error","maxZoom","minZoom","maxCacheSize","TileLayer","CompositeLayer","initializeState","state","tiles","tileCache","TileCache","isLoaded","shouldUpdateState","changeFlags","somethingChanged","updateState","oldProps","context","updateTriggersChanged","all","finalize","setState","maxSize","viewportChanged","viewport","getLayerZoomLevel","id","update","currTiles","filter","tile","allCurrTilesLoaded","every","map","data","then","_data","getPickingInfo","info","sourceLayer","Math","floor","zoom","parseInt","renderLayers","visible","Object","assign","layerName"],"mappings":"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","sourcesContent":["import { CompositeLayer } from 'kepler-outdated-deck.gl-core';\nimport { GeoJsonLayer } from 'kepler-outdated-deck.gl-layers';\nimport TileCache from './utils/tile-cache';\n\nconst defaultProps = {\n  renderSubLayers: {type: 'function', value: props => new GeoJsonLayer(props)},\n  getTileData: {type: 'function', value: ({x, y, z}) => Promise.resolve(null)},\n  onViewportLoaded: {type: 'function', value: () => {}},\n  // eslint-disable-next-line\n  onTileError: {type: 'function', value: err => console.error(err)},\n  maxZoom: null,\n  minZoom: 0,\n  maxCacheSize: null\n};\n\nexport default class TileLayer extends CompositeLayer {\n  initializeState() {\n    const {maxZoom, minZoom, getTileData, onTileError} = this.props;\n    this.state = {\n      tiles: [],\n      tileCache: new TileCache({getTileData, maxZoom, minZoom, onTileError}),\n      isLoaded: false\n    };\n  }\n\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    const {onViewportLoaded, onTileError} = props;\n    if (\n      changeFlags.updateTriggersChanged &&\n      (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData)\n    ) {\n      const {getTileData, maxZoom, minZoom, maxCacheSize} = props;\n      this.state.tileCache.finalize();\n      this.setState({\n        tileCache: new TileCache({\n          getTileData,\n          maxSize: maxCacheSize,\n          maxZoom,\n          minZoom,\n          onTileError\n        })\n      });\n    }\n    if (changeFlags.viewportChanged) {\n      const {viewport} = context;\n      const z = this.getLayerZoomLevel();\n      if (viewport.id !== 'DEFAULT-INITIAL-VIEWPORT') {\n        this.state.tileCache.update(viewport, tiles => {\n          const currTiles = tiles.filter(tile => tile.z === z);\n          const allCurrTilesLoaded = currTiles.every(tile => tile.isLoaded);\n          this.setState({tiles, isLoaded: allCurrTilesLoaded});\n          if (!allCurrTilesLoaded) {\n            Promise.all(currTiles.map(tile => tile.data)).then(() => {\n              this.setState({isLoaded: true});\n              onViewportLoaded(currTiles.filter(tile => tile._data).map(tile => tile._data));\n            });\n          } else {\n            onViewportLoaded(currTiles.filter(tile => tile._data).map(tile => tile._data));\n          }\n        });\n      }\n    }\n  }\n\n  getPickingInfo({info, sourceLayer}) {\n    info.sourceLayer = sourceLayer;\n    info.tile = sourceLayer.props.tile;\n    return info;\n  }\n\n  getLayerZoomLevel() {\n    const z = Math.floor(this.context.viewport.zoom);\n    const {maxZoom, minZoom} = this.props;\n    if (maxZoom && parseInt(maxZoom, 10) === maxZoom && z > maxZoom) {\n      return maxZoom;\n    } else if (minZoom && parseInt(minZoom, 10) === minZoom && z < minZoom) {\n      return minZoom;\n    }\n    return z;\n  }\n\n  renderLayers() {\n    const {renderSubLayers, visible} = this.props;\n    const z = this.getLayerZoomLevel();\n    return this.state.tiles.map(tile => {\n      return renderSubLayers(\n        Object.assign({}, this.props, {\n          id: `${this.id}-${tile.x}-${tile.y}-${tile.z}`,\n          data: tile.data,\n          visible: visible && (!this.state.isLoaded || tile.z === z),\n          tile\n        })\n      );\n    });\n  }\n}\n\nTileLayer.layerName = 'TileLayer';\nTileLayer.defaultProps = defaultProps;\n"],"file":"tile-layer.js"}