{"version":3,"sources":["../../../src/arc-layer/arc-layer.js"],"names":["fp64LowPart","fp64","DEFAULT_COLOR","defaultProps","getSourcePosition","type","value","x","sourcePosition","getTargetPosition","targetPosition","getSourceColor","getTargetColor","getWidth","getHeight","getTilt","widthUnits","widthScale","min","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","getStrokeWidth","deprecatedFor","ArcLayer","Layer","getShaders","use64bitProjection","vs","vs64","fs","modules","initializeState","attributeManager","getAttributeManager","addInstanced","instancePositions","size","transition","accessor","update","calculateInstancePositions","instancePositions64Low","calculateInstancePositions64Low","instanceSourceColors","defaultValue","instanceTargetColors","instanceWidths","instanceHeights","instanceTilts","updateState","props","oldProps","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","draw","uniforms","viewport","widthMultiplier","distanceScales","metersPerPixel","setUniforms","Object","assign","positions","NUM_SEGMENTS","i","concat","Model","id","geometry","Geometry","drawMode","attributes","Float32Array","isInstanced","shaderCache","numSegments","attribute","startRow","endRow","data","iterable","objectInfo","object","index","isFP64","use64bitPositions","constant","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { Layer, createIterable } from 'kepler-outdated-deck.gl-core';\n\nimport GL from '@luma.gl/constants';\nimport {Model, Geometry, fp64} from '@luma.gl/core';\nconst {fp64LowPart} = fp64;\n\nimport vs from './arc-layer-vertex.glsl';\nimport vs64 from './arc-layer-vertex-64.glsl';\nimport fs from './arc-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  fp64: false,\n\n  getSourcePosition: {type: 'accessor', value: x => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: x => x.targetPosition},\n  getSourceColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getTargetColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n  getHeight: {type: 'accessor', value: 1},\n  getTilt: {type: 'accessor', value: 0},\n\n  widthUnits: 'pixels',\n  widthScale: {type: 'number', value: 1, min: 0},\n  widthMinPixels: {type: 'number', value: 0, min: 0},\n  widthMaxPixels: {type: 'number', value: Number.MAX_SAFE_INTEGER, min: 0},\n\n  // Deprecated, remove in v8\n  getStrokeWidth: {deprecatedFor: 'getWidth'}\n};\n\nexport default class ArcLayer extends Layer {\n  getShaders() {\n    return this.use64bitProjection()\n      ? {vs: vs64, fs, modules: ['project64', 'picking']}\n      : {vs, fs, modules: ['picking']}; // 'project' module added by default.\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 4,\n        transition: true,\n        accessor: ['getSourcePosition', 'getTargetPosition'],\n        update: this.calculateInstancePositions\n      },\n      instancePositions64Low: {\n        size: 4,\n        accessor: ['getSourcePosition', 'getTargetPosition'],\n        update: this.calculateInstancePositions64Low\n      },\n      instanceSourceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getSourceColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceTargetColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getTargetColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getWidth',\n        defaultValue: 1\n      },\n      instanceHeights: {\n        size: 1,\n        transition: true,\n        accessor: 'getHeight',\n        defaultValue: 1\n      },\n      instanceTilts: {\n        size: 1,\n        transition: true,\n        accessor: 'getTilt',\n        defaultValue: 0\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    // Re-generate model if geometry changed\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {viewport} = this.context;\n    const {widthUnits, widthScale, widthMinPixels, widthMaxPixels} = this.props;\n\n    const widthMultiplier = widthUnits === 'pixels' ? viewport.distanceScales.metersPerPixel[2] : 1;\n\n    this.state.model\n      .setUniforms(\n        Object.assign({}, uniforms, {\n          widthScale: widthScale * widthMultiplier,\n          widthMinPixels,\n          widthMaxPixels\n        })\n      )\n      .draw();\n  }\n\n  _getModel(gl) {\n    let positions = [];\n    const NUM_SEGMENTS = 50;\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    for (let i = 0; i < NUM_SEGMENTS; i++) {\n      positions = positions.concat([i, -1, 0, i, 1, 0]);\n    }\n\n    const model = new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n\n    model.setUniforms({numSegments: NUM_SEGMENTS});\n\n    return model;\n  }\n\n  calculateInstancePositions(attribute, {startRow, endRow}) {\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const sourcePosition = getSourcePosition(object, objectInfo);\n      value[i++] = sourcePosition[0];\n      value[i++] = sourcePosition[1];\n      // Call `getTargetPosition` after `sourcePosition` is used in case both accessors write into\n      // the same temp array\n      const targetPosition = getTargetPosition(object, objectInfo);\n      value[i++] = targetPosition[0];\n      value[i++] = targetPosition[1];\n    }\n  }\n\n  calculateInstancePositions64Low(attribute, {startRow, endRow}) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(4);\n      return;\n    }\n\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = startRow * size;\n    const {iterable, objectInfo} = createIterable(data, startRow, endRow);\n    for (const object of iterable) {\n      objectInfo.index++;\n      const sourcePosition = getSourcePosition(object, objectInfo);\n      value[i++] = fp64LowPart(sourcePosition[0]);\n      value[i++] = fp64LowPart(sourcePosition[1]);\n      // Call `getTargetPosition` after `sourcePosition` is used in case both accessors write into\n      // the same temp array\n      const targetPosition = getTargetPosition(object, objectInfo);\n      value[i++] = fp64LowPart(targetPosition[0]);\n      value[i++] = fp64LowPart(targetPosition[1]);\n    }\n  }\n}\n\nArcLayer.layerName = 'ArcLayer';\nArcLayer.defaultProps = defaultProps;\n"],"file":"arc-layer.js"}