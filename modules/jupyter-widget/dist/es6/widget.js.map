{"version":3,"sources":["../../src/widget.js"],"names":["DOMWidgetModel","DOMWidgetView","MODULE_NAME","MODULE_VERSION","createDeckScaffold","loadCss","hideMapboxCSSWarning","setMapProps","waitForElementToDisplay","mapboxgl","require","deckgl","deckglLayers","deckAggregationLayers","deckJson","MAPBOX_CSS_URL","DeckGLModel","defaults","_model_name","model_name","_model_module","model_module","_model_module_version","model_module_version","_view_name","view_name","_view_module","view_module","_view_module_version","view_module_version","serializers","TICK_RATE_MILLISECONDS","DeckGLView","render","modelId","model","model_id","listenTo","value_changed","get","width","height","el","initJSElements","bind","_onViewStateChange","viewState","deck","setProps","mapLayer","accessToken","Deck","canvas","onLoad","mapboxApiAccessToken","views","MapView","onViewStateChange","Map","container","interactive","style","json_input","parsedJSONInput","JSON","parse","jsonConverter","_JSONConverter","configuration","layers","results","convertJsonToDeckProps","props"],"mappings":"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","sourcesContent":["import {DOMWidgetModel, DOMWidgetView} from '@jupyter-widgets/base';\n\nimport {MODULE_NAME, MODULE_VERSION} from './version';\n\nimport {\n  createDeckScaffold,\n  loadCss,\n  hideMapboxCSSWarning,\n  setMapProps,\n  waitForElementToDisplay\n} from './utils';\n\nconst mapboxgl = require('mapbox-gl');\nconst deckgl = require('kepler-outdated-deck.gl-core');\nconst deckglLayers = require('kepler-outdated-deck.gl-layers');\nconst deckAggregationLayers = require('kepler-outdated-deck.gl-aggregation-layers');\nconst deckJson = require('kepler-outdated-deck.gl-json');\n\nconst MAPBOX_CSS_URL = 'https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.css';\n\nexport class DeckGLModel extends DOMWidgetModel {\n  defaults() {\n    return {\n      ...super.defaults(),\n      _model_name: DeckGLModel.model_name,\n      _model_module: DeckGLModel.model_module,\n      _model_module_version: DeckGLModel.model_module_version,\n      _view_name: DeckGLModel.view_name,\n      _view_module: DeckGLModel.view_module,\n      _view_module_version: DeckGLModel.view_module_version\n    };\n  }\n\n  static get serializers() {\n    return {...DOMWidgetModel.serializers};\n    // Add any extra serializers here\n  }\n\n  static get model_name() {\n    return 'DeckGLModel';\n  }\n  static get model_module() {\n    return MODULE_NAME;\n  }\n  static get model_module_version() {\n    return MODULE_VERSION;\n  }\n  static get view_name() {\n    return 'DeckGLView';\n  }\n  static get view_module() {\n    return MODULE_NAME;\n  }\n  static get view_module_version() {\n    return MODULE_VERSION;\n  }\n}\n\nconst TICK_RATE_MILLISECONDS = 100;\n\nexport class DeckGLView extends DOMWidgetView {\n  render() {\n    this.modelId = this.model.model_id;\n    super.render();\n    this.listenTo(this.model, 'change:json_input', this.value_changed);\n    loadCss(MAPBOX_CSS_URL);\n    const [width, height] = [this.model.get('width'), this.model.get('height')];\n    createDeckScaffold(this.el, this.modelId, width, height);\n    waitForElementToDisplay(\n      `#deck-map-wrapper-${this.modelId}`,\n      TICK_RATE_MILLISECONDS,\n      this.initJSElements.bind(this)\n    );\n  }\n\n  _onViewStateChange({viewState}) {\n    this.deck.setProps({viewState});\n    setMapProps(this.mapLayer, {viewState});\n  }\n\n  initJSElements() {\n    if (!this.deck) {\n      mapboxgl.accessToken = this.model.get('mapbox_key');\n      this.deck = new deckgl.Deck({\n        canvas: `deck-map-container-${this.modelId}`,\n        height: '100%',\n        width: '100%',\n        onLoad: this.value_changed.bind(this),\n        mapboxApiAccessToken: mapboxgl.accessToken,\n        views: [new deckgl.MapView()],\n        onViewStateChange: this._onViewStateChange.bind(this)\n      });\n    }\n\n    if (!this.mapLayer) {\n      this.mapLayer = new mapboxgl.Map({\n        container: `map-${this.modelId}`,\n        interactive: false,\n        style: null\n      });\n    }\n  }\n\n  value_changed() {\n    this.json_input = this.model.get('json_input');\n    const parsedJSONInput = JSON.parse(this.json_input);\n    this.initJSElements();\n    const jsonConverter = new deckJson._JSONConverter({\n      configuration: {\n        layers: {...deckglLayers, ...deckAggregationLayers}\n      }\n    });\n    const results = jsonConverter.convertJsonToDeckProps(parsedJSONInput);\n    this.deck.setProps(results);\n    hideMapboxCSSWarning();\n    setMapProps(this.mapLayer, this.deck.props);\n  }\n}\n"],"file":"widget.js"}