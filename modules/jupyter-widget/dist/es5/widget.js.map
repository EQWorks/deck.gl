{"version":3,"sources":["../../src/widget.js"],"names":["mapboxgl","require","deckgl","deckglLayers","deckAggregationLayers","deckJson","MAPBOX_CSS_URL","DeckGLModel","_model_name","model_name","_model_module","model_module","_model_module_version","model_module_version","_view_name","view_name","_view_module","view_module","_view_module_version","view_module_version","DOMWidgetModel","serializers","MODULE_NAME","MODULE_VERSION","TICK_RATE_MILLISECONDS","DeckGLView","modelId","model","model_id","listenTo","value_changed","get","width","height","el","initJSElements","bind","viewState","deck","setProps","mapLayer","accessToken","Deck","canvas","onLoad","mapboxApiAccessToken","views","MapView","onViewStateChange","_onViewStateChange","Map","container","interactive","style","json_input","parsedJSONInput","JSON","parse","jsonConverter","_JSONConverter","configuration","layers","results","convertJsonToDeckProps","props","DOMWidgetView"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AAQA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,8BAAD,CAAtB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAC,gCAAD,CAA5B;;AACA,IAAMG,qBAAqB,GAAGH,OAAO,CAAC,4CAAD,CAArC;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,8BAAD,CAAxB;;AAEA,IAAMK,cAAc,GAAG,iEAAvB;;IAEaC,W;;;;;;;;;;+BACA;AACT;AAEEC,QAAAA,WAAW,EAAED,WAAW,CAACE,UAF3B;AAGEC,QAAAA,aAAa,EAAEH,WAAW,CAACI,YAH7B;AAIEC,QAAAA,qBAAqB,EAAEL,WAAW,CAACM,oBAJrC;AAKEC,QAAAA,UAAU,EAAEP,WAAW,CAACQ,SAL1B;AAMEC,QAAAA,YAAY,EAAET,WAAW,CAACU,WAN5B;AAOEC,QAAAA,oBAAoB,EAAEX,WAAW,CAACY;AAPpC;AASD;;;wBAEwB;AACvB,6CAAWC,qBAAeC,WAA1B;AAED;;;wBAEuB;AACtB,aAAO,aAAP;AACD;;;wBACyB;AACxB,aAAOC,oBAAP;AACD;;;wBACiC;AAChC,aAAOC,uBAAP;AACD;;;wBACsB;AACrB,aAAO,YAAP;AACD;;;wBACwB;AACvB,aAAOD,oBAAP;AACD;;;wBACgC;AAC/B,aAAOC,uBAAP;AACD;;;EAnC8BH,oB;;;AAsCjC,IAAMI,sBAAsB,GAAG,GAA/B;;IAEaC,U;;;;;;;;;;6BACF;AACP,WAAKC,OAAL,GAAe,KAAKC,KAAL,CAAWC,QAA1B;AACA;AACA,WAAKC,QAAL,CAAc,KAAKF,KAAnB,EAA0B,mBAA1B,EAA+C,KAAKG,aAApD;AACA,0BAAQxB,cAAR;AAJO,iBAKiB,CAAC,KAAKqB,KAAL,CAAWI,GAAX,CAAe,OAAf,CAAD,EAA0B,KAAKJ,KAAL,CAAWI,GAAX,CAAe,QAAf,CAA1B,CALjB;AAAA,UAKAC,KALA;AAAA,UAKOC,MALP;AAMP,qCAAmB,KAAKC,EAAxB,EAA4B,KAAKR,OAAjC,EAA0CM,KAA1C,EAAiDC,MAAjD;AACA,sEACuB,KAAKP,OAD5B,GAEEF,sBAFF,EAGE,KAAKW,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAHF;AAKD;;;8CAE+B;AAAA,UAAZC,SAAY,SAAZA,SAAY;AAC9B,WAAKC,IAAL,CAAUC,QAAV,CAAmB;AAACF,QAAAA,SAAS,EAATA;AAAD,OAAnB;AACA,8BAAY,KAAKG,QAAjB,EAA2B;AAACH,QAAAA,SAAS,EAATA;AAAD,OAA3B;AACD;;;qCAEgB;AACf,UAAI,CAAC,KAAKC,IAAV,EAAgB;AACdtC,QAAAA,QAAQ,CAACyC,WAAT,GAAuB,KAAKd,KAAL,CAAWI,GAAX,CAAe,YAAf,CAAvB;AACA,aAAKO,IAAL,GAAY,IAAIpC,MAAM,CAACwC,IAAX,CAAgB;AAC1BC,UAAAA,MAAM,+BAAwB,KAAKjB,OAA7B,CADoB;AAE1BO,UAAAA,MAAM,EAAE,MAFkB;AAG1BD,UAAAA,KAAK,EAAE,MAHmB;AAI1BY,UAAAA,MAAM,EAAE,KAAKd,aAAL,CAAmBM,IAAnB,CAAwB,IAAxB,CAJkB;AAK1BS,UAAAA,oBAAoB,EAAE7C,QAAQ,CAACyC,WALL;AAM1BK,UAAAA,KAAK,EAAE,CAAC,IAAI5C,MAAM,CAAC6C,OAAX,EAAD,CANmB;AAO1BC,UAAAA,iBAAiB,EAAE,KAAKC,kBAAL,CAAwBb,IAAxB,CAA6B,IAA7B;AAPO,SAAhB,CAAZ;AASD;;AAED,UAAI,CAAC,KAAKI,QAAV,EAAoB;AAClB,aAAKA,QAAL,GAAgB,IAAIxC,QAAQ,CAACkD,GAAb,CAAiB;AAC/BC,UAAAA,SAAS,gBAAS,KAAKzB,OAAd,CADsB;AAE/B0B,UAAAA,WAAW,EAAE,KAFkB;AAG/BC,UAAAA,KAAK,EAAE;AAHwB,SAAjB,CAAhB;AAKD;AACF;;;oCAEe;AACd,WAAKC,UAAL,GAAkB,KAAK3B,KAAL,CAAWI,GAAX,CAAe,YAAf,CAAlB;AACA,UAAMwB,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKH,UAAhB,CAAxB;AACA,WAAKnB,cAAL;AACA,UAAMuB,aAAa,GAAG,IAAIrD,QAAQ,CAACsD,cAAb,CAA4B;AAChDC,QAAAA,aAAa,EAAE;AACbC,UAAAA,MAAM,kCAAM1D,YAAN,EAAuBC,qBAAvB;AADO;AADiC,OAA5B,CAAtB;AAKA,UAAM0D,OAAO,GAAGJ,aAAa,CAACK,sBAAd,CAAqCR,eAArC,CAAhB;AACA,WAAKjB,IAAL,CAAUC,QAAV,CAAmBuB,OAAnB;AACA;AACA,8BAAY,KAAKtB,QAAjB,EAA2B,KAAKF,IAAL,CAAU0B,KAArC;AACD;;;EAxD6BC,mB","sourcesContent":["import {DOMWidgetModel, DOMWidgetView} from '@jupyter-widgets/base';\n\nimport {MODULE_NAME, MODULE_VERSION} from './version';\n\nimport {\n  createDeckScaffold,\n  loadCss,\n  hideMapboxCSSWarning,\n  setMapProps,\n  waitForElementToDisplay\n} from './utils';\n\nconst mapboxgl = require('mapbox-gl');\nconst deckgl = require('kepler-outdated-deck.gl-core');\nconst deckglLayers = require('kepler-outdated-deck.gl-layers');\nconst deckAggregationLayers = require('kepler-outdated-deck.gl-aggregation-layers');\nconst deckJson = require('kepler-outdated-deck.gl-json');\n\nconst MAPBOX_CSS_URL = 'https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.1/mapbox-gl.css';\n\nexport class DeckGLModel extends DOMWidgetModel {\n  defaults() {\n    return {\n      ...super.defaults(),\n      _model_name: DeckGLModel.model_name,\n      _model_module: DeckGLModel.model_module,\n      _model_module_version: DeckGLModel.model_module_version,\n      _view_name: DeckGLModel.view_name,\n      _view_module: DeckGLModel.view_module,\n      _view_module_version: DeckGLModel.view_module_version\n    };\n  }\n\n  static get serializers() {\n    return {...DOMWidgetModel.serializers};\n    // Add any extra serializers here\n  }\n\n  static get model_name() {\n    return 'DeckGLModel';\n  }\n  static get model_module() {\n    return MODULE_NAME;\n  }\n  static get model_module_version() {\n    return MODULE_VERSION;\n  }\n  static get view_name() {\n    return 'DeckGLView';\n  }\n  static get view_module() {\n    return MODULE_NAME;\n  }\n  static get view_module_version() {\n    return MODULE_VERSION;\n  }\n}\n\nconst TICK_RATE_MILLISECONDS = 100;\n\nexport class DeckGLView extends DOMWidgetView {\n  render() {\n    this.modelId = this.model.model_id;\n    super.render();\n    this.listenTo(this.model, 'change:json_input', this.value_changed);\n    loadCss(MAPBOX_CSS_URL);\n    const [width, height] = [this.model.get('width'), this.model.get('height')];\n    createDeckScaffold(this.el, this.modelId, width, height);\n    waitForElementToDisplay(\n      `#deck-map-wrapper-${this.modelId}`,\n      TICK_RATE_MILLISECONDS,\n      this.initJSElements.bind(this)\n    );\n  }\n\n  _onViewStateChange({viewState}) {\n    this.deck.setProps({viewState});\n    setMapProps(this.mapLayer, {viewState});\n  }\n\n  initJSElements() {\n    if (!this.deck) {\n      mapboxgl.accessToken = this.model.get('mapbox_key');\n      this.deck = new deckgl.Deck({\n        canvas: `deck-map-container-${this.modelId}`,\n        height: '100%',\n        width: '100%',\n        onLoad: this.value_changed.bind(this),\n        mapboxApiAccessToken: mapboxgl.accessToken,\n        views: [new deckgl.MapView()],\n        onViewStateChange: this._onViewStateChange.bind(this)\n      });\n    }\n\n    if (!this.mapLayer) {\n      this.mapLayer = new mapboxgl.Map({\n        container: `map-${this.modelId}`,\n        interactive: false,\n        style: null\n      });\n    }\n  }\n\n  value_changed() {\n    this.json_input = this.model.get('json_input');\n    const parsedJSONInput = JSON.parse(this.json_input);\n    this.initJSElements();\n    const jsonConverter = new deckJson._JSONConverter({\n      configuration: {\n        layers: {...deckglLayers, ...deckAggregationLayers}\n      }\n    });\n    const results = jsonConverter.convertJsonToDeckProps(parsedJSONInput);\n    this.deck.setProps(results);\n    hideMapboxCSSWarning();\n    setMapProps(this.mapLayer, this.deck.props);\n  }\n}\n"],"file":"widget.js"}